<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - アニャ様です！</title>
        <link>/posts/thinking/</link>
        <description>All Posts | アニャ様です！</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1091451551@qq.com (アニャ様)</managingEditor>
            <webMaster>1091451551@qq.com (アニャ様)</webMaster><lastBuildDate>Tue, 06 Sep 2022 20:58:55 &#43;0800</lastBuildDate><atom:link href="/posts/thinking/" rel="self" type="application/rss+xml" /><item>
    <title>Golang链表</title>
    <link>/posts/thinking/golang%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Tue, 06 Sep 2022 20:58:55 &#43;0800</pubDate>
    <author>アニャ様</author>
    <guid>/posts/thinking/golang%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[package main import ( &#34;fmt&#34; ) type Node struct { data int next *Node } func SingleCreate(data int) *Node { return &amp;Node{ data: data, next: nil, } } //创建单个节点 func CreateList(lenth int) *Node { var head *Node = new(Node) head.data = 0 temp := head for i := 1; i &lt; lenth; i++ { node := new(Node) node.data = i temp.next = node]]></description>
</item>
<item>
    <title>MarkDown常用语法</title>
    <link>/posts/thinking/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</link>
    <pubDate>Tue, 09 Aug 2022 01:43:34 &#43;0800</pubDate>
    <author>アニャ様</author>
    <guid>/posts/thinking/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</guid>
    <description><![CDATA[1. 分级标题 一级 用 # 二级 用 ## &hellip; &hellip;(以此类推) 2. 段落 创建段落，请使用空白行将一行或多行文本进行分隔。 不要用空格（spaces）或制]]></description>
</item>
<item>
    <title>文件管理</title>
    <link>/posts/thinking/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</link>
    <pubDate>Sun, 24 Jul 2022 20:57:29 &#43;0800</pubDate>
    <author>アニャ様</author>
    <guid>/posts/thinking/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</guid>
    <description><![CDATA[C语言的文件管理部分内容 1. 从文件中逐个输入字符及向文件中逐个输出字符的顺序读写函数 fgetc 和 fputc 调整文件读写位置到文件开始处的函数 rewind 头文件：#inc]]></description>
</item>
</channel>
</rss>
